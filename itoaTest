         .data      
fout:   .asciiz "randomMIPS.txt"      # filename for output

var0: .word 0
var1: .word 0
var2: .word 0
var3: .word 0

data:    .word     0 : 1200       # storage for 16x16 matrix of words
         .text
             
             
      
         addi	$v0,	$v0,	55
             
               
########################
#LETS HAVE SOME FUN HERE
########################

fun : 	li 	$t3,	10
	div	$v0,	$t3
	mfhi 	$t4
	mflo	$t5
	addi	$t4,	$t4,	48
	sw 	$t4,	var3	

	div	$t5,	$t3
	mfhi 	$t4
	mflo	$t5
	addi	$t4,	$t4,	48
	sw 	$t4,	var2
	
	div	$t5,	$t3
	mfhi 	$t4
	mflo	$t5
	addi	$t4,	$t4,	48
	sw 	$t4,	var1
	
	div	$t5,	$t3
	mfhi 	$t4
	mflo	$t5
	addi	$t4,	$t4,	48
	sw 	$t4,	var0
	
##############################
#FUN ENDS HERE
##############################
        
        li   $v0, 13       # system call for open file
  	la   $a0, fout     # output file name
  	li   $a1, 1        # Open for writing (flags are 0: read, 1: write)
  	li   $a2, 0        # mode is ignored
 	syscall            # open a file (file descriptor returned in $v0)
 	move $s6, $v0      # save the file descriptor    
 	
 	
 	 li   $v0, 15       # system call for write to file
  	move $a0, $s6      # file descriptor 
  	la   $a1, var0   # address of buffer from which to write
  	li   $a2, 1       # hardcoded buffer length
 	syscall            # write to file
 	
 	 li   $v0, 15       # system call for write to file
  	move $a0, $s6      # file descriptor 
  	la   $a1, var1   # address of buffer from which to write
  	li   $a2, 1       # hardcoded buffer length
 	syscall            # write to file
 	
 	 li   $v0, 15       # system call for write to file
  	move $a0, $s6      # file descriptor 
  	la   $a1, var2   # address of buffer from which to write
  	li   $a2, 1       # hardcoded buffer length
 	syscall            # write to file
 	
 	 li   $v0, 15       # system call for write to file
  	move $a0, $s6      # file descriptor 
  	la   $a1, var3   # address of buffer from which to write
  	li   $a2, 1       # hardcoded buffer length
 	syscall            # write to file
 	
 	# Close the file 
 	 li   $v0, 16       # system call for close file
  	move $a0, $s6      # file descriptor to close
	syscall  